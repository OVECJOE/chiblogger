{"version":3,"file":"static/js/106.a068e862.chunk.js","mappings":"gMAyCA,EApCkB,WACd,OACI,SAAC,IAAD,WACI,kBAAMA,UAAU,YAAhB,WACI,qBAASA,UAAU,cAAnB,WACI,4BACI,SAAC,KAAD,CAASC,GAAG,aAAZ,4BAGA,gBAAKD,UAAU,oBAEnB,4BACI,SAAC,KAAD,CAASC,GAAG,yBAAZ,8BAGA,gBAAKD,UAAU,oBAEnB,4BACI,SAAC,KAAD,CAASC,GAAG,sBAAZ,0BAGA,gBAAKD,UAAU,oBAEnB,4BACI,SAAC,KAAD,CAASC,GAAG,qBAAZ,yBAGA,gBAAKD,UAAU,uBAGvB,SAAC,KAAD,W,gICnCHE,EAAc,SAACC,EAAOC,GAC/B,OAAQA,EAAOC,MACX,IAAK,kBACD,OAAID,EAAOE,SACA,kBACAH,GACAC,EAAOE,UAGX,kBACAH,GADP,cAEKC,EAAOG,IAAMH,EAAOI,QAE7B,IAAK,eACD,IAAMC,GAAa,OAAON,EAAMM,eAGhC,OAFAA,EAAcC,KAAKN,EAAOO,WAEnB,kBACAR,GADP,IAEIM,cAAeA,EAAcG,OAAO,KAE5C,IAAK,eACD,OAAO,kBACAT,GADP,IAEIM,cAAe,KAEvB,IAAK,mBACD,OAAO,kBACAN,GADP,IAEIU,UAAWT,EAAOS,YAE1B,IAAK,qBACD,OAAOT,EAAOU,QAClB,QACI,OAAOX,I,SC9BNY,GAAcC,EAAAA,EAAAA,iBAkC3B,EAhC4B,SAACC,GACzB,IAAMC,EAAiB,iBAAO,CAC1BC,MAAO,GACPC,SAAU,GACVX,cAAe,GACfY,QAAS,GACTC,aAAa,EACbC,QAAS,GACTV,WAAW,EACXW,WAAY,KAEhB,GAAyCC,EAAAA,EAAAA,YAAWvB,EAChDwB,KAAKC,MAAMC,eAAeC,QAAQ,iBAXR,CAC1BV,MAAO,GACPC,SAAU,GACVX,cAAe,GACfY,QAAS,GACTC,aAAa,EACbC,QAAS,GACTV,WAAW,EACXW,WAAY,KAEhB,eAAOM,EAAP,KAAoBC,EAApB,KAQA,OAJAC,EAAAA,EAAAA,YAAU,WACNJ,eAAeK,QAAQ,cAAeP,KAAKQ,UAAUJ,MACtD,CAACA,KAGA,SAACf,EAAYoB,SAAb,CACI3B,MAAO,CACHU,eAAAA,EACAY,YAAAA,EACAC,kBAAAA,GAJR,SAOKd,EAAMmB","sources":["components/Dashboard.js","reducers/postReducer.js","contexts/postContext.js"],"sourcesContent":["import { Link as NavLink, Outlet } from 'react-router-dom';\n\nimport PostContextProvider from '../contexts/postContext';\nimport './styles/Dashboard.css';\n\nconst Dashboard = () => {\n    return (\n        <PostContextProvider>\n            <main className='dashboard'>\n                <section className='nav-section'>\n                    <div>\n                        <NavLink to='/dashboard'>\n                            Notifications\n                        </NavLink>\n                        <div className='line-stroke'></div>\n                    </div>\n                    <div>\n                        <NavLink to='/dashboard/new-article'>\n                            Add New Article\n                        </NavLink>\n                        <div className='line-stroke'></div>\n                    </div>\n                    <div>\n                        <NavLink to='/dashboard/articles'>\n                            My Articles\n                        </NavLink>\n                        <div className='line-stroke'></div>\n                    </div>\n                    <div>\n                        <NavLink to='/dashboard/profile'>\n                            My Profile\n                        </NavLink>\n                        <div className='line-stroke'></div>\n                    </div>\n                </section>\n                <Outlet />\n            </main>\n        </PostContextProvider>\n    );\n};\n\nexport default Dashboard;","export const postReducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_PROPERTY':\n            if (action.article) {\n                return {\n                    ...state,\n                    ...action.article\n                }\n            }\n            return {\n                ...state,\n                [action.key]: action.value\n            };\n        case 'UPDATE_PHOTO':\n            const articleImages = [...state.articleImages];\n            articleImages.push(action.photoUrl);\n\n            return {\n                ...state,\n                articleImages: articleImages.slice(-5)\n            };\n        case 'CLEAR_PHOTOS':\n            return {\n                ...state,\n                articleImages: []\n            }\n        case 'TOGGLE_PUBLISHED':\n            return {\n                ...state,\n                published: action.published\n            };\n        case 'CLEAR_ARTICLE_DATA':\n            return action.default;\n        default:\n            return state;\n    }\n};","import { createContext, useEffect, useReducer } from \"react\";\n\nimport { postReducer } from '../reducers/postReducer';\n\nexport const PostContext = createContext();\n\nconst PostContextProvider = (props) => {\n    const defaultArticle = () => ({\n        title: '',\n        slugName: '',\n        articleImages: [],\n        content: '',\n        premiumRead: false,\n        creator: '',\n        published: false,\n        categories: []\n    });\n    const [articleData, articleDispatcher] = useReducer(postReducer,\n        JSON.parse(sessionStorage.getItem('articleData')) || defaultArticle()\n    );\n\n    useEffect(() => {\n        sessionStorage.setItem('articleData', JSON.stringify(articleData));\n    }, [articleData]);\n\n    return (\n        <PostContext.Provider\n            value={{\n                defaultArticle,\n                articleData,\n                articleDispatcher\n            }}\n        >\n            {props.children}\n        </PostContext.Provider>\n    );\n};\n\nexport default PostContextProvider;"],"names":["className","to","postReducer","state","action","type","article","key","value","articleImages","push","photoUrl","slice","published","default","PostContext","createContext","props","defaultArticle","title","slugName","content","premiumRead","creator","categories","useReducer","JSON","parse","sessionStorage","getItem","articleData","articleDispatcher","useEffect","setItem","stringify","Provider","children"],"sourceRoot":""}