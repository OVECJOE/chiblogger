{"version":3,"file":"static/js/162.279f060e.chunk.js","mappings":"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","sources":["components/Footer.js","components/CategoryList.js","components/HomePage.js","utils.js"],"sourcesContent":["import {\n    FaFacebookMessenger,\n    FaInstagram, FaTwitter,\n    FaLinkedin\n} from 'react-icons/fa';\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\n\nimport './styles/Footer.css';\nimport { erroneous } from '../utils';\nimport { ProjectContext } from '../contexts/projectContext';\nimport { UserContext } from '../contexts/userContext';\n\nconst Footer = () => {\n    const genDefaultParams = () =>({\n            firstName: '',\n            email: '',\n            message: ''\n    });\n\n    const [formData, setFormData] = useState(genDefaultParams());\n    const { projectDispatcher } = useContext(ProjectContext);\n    const { userData } = useContext(UserContext);\n\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            Authorization: `Bearer ${userData.token}`\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        axios.post('/api/notifications', formData, config)\n        .then(({ data }) => {\n            projectDispatcher({\n                type: 'SET_MESSAGE',\n                message: `${data.message} Ticket ID: ${data.notificationId}`\n            });\n            setFormData(genDefaultParams());\n        }).catch(err => erroneous(err, projectDispatcher));\n    };\n\n    return (\n        <footer className='App__footer'>\n            <form className='contact-form' method='POST' onSubmit={sendEmail}>\n                <h2 className='form-title'>Contact Form</h2>\n                <label htmlFor='first-name'>Enter Your First Name:</label>\n                <input\n                    type='text'\n                    placeholder='First Name e.g John'\n                    name='firstName'\n                    value={formData.firstName}\n                    onChange={handleChange}\n                    id='first-name'\n                    required\n                />\n                <label htmlFor='email'>Enter Your Email:</label>\n                <input\n                    type='email'\n                    placeholder='Email e.g. xyz@gmail.com'\n                    name='email'\n                    value={formData.email}\n                    onChange={handleChange}\n                    id='email'\n                    required\n                />\n                <label htmlFor='message'>Enter Your Message:</label>\n                <textarea\n                    placeholder='Your Message'\n                    name='message'\n                    value={formData.message}\n                    onChange={handleChange}\n                    id='message'\n                    required\n                />\n                <button>Send Message</button>\n            </form>\n            <div className='connection-card'>\n                <p>\n                    Wanna reach out to me via social links?\n                    Choose anyone below.\n                </p>\n                <div className='social-links'>\n                    <a href='https://linkedin.com'>\n                        <FaLinkedin />\n                    </a>\n                    <a href='https://instagram.com'>\n                        <FaInstagram />\n                    </a>\n                    <a href='https://twitter.com'>\n                        <FaTwitter />\n                    </a>\n                    <a href='https://facebook.com'>\n                        <FaFacebookMessenger />\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import { FaBatteryEmpty } from 'react-icons/fa';\n\nimport { computeDate } from '../utils';\n\nconst CategoryList = ({ categorizedArticles, setRandomArticle }) => {\n    const readArticle = (article) => {\n        if (typeof article === 'object' && Object.keys(article).length > 0) {\n            setRandomArticle(article);\n        }\n    };\n   \n    return (\n        <div className='articles-container'>\n            {categorizedArticles.map(article => {\n                return (\n                    <article\n                        className='post-card'\n                        key={article._id}\n                        onClick={() => readArticle(article)}\n                    >\n                        <img src={article.selectedFiles[0]} alt={article.title} />\n                        <div className='post-info'>\n                            <span className='timestamp'>\n                                {computeDate(article.createdOn)}\n                            </span>\n                            <h4 className='headline'>\n                                {article.title}\n                            </h4>\n                            <span className='author'>\n                                {article.creator.username}\n                            </span>\n                        </div>\n                    </article>\n                );\n            })}\n            {!categorizedArticles.length && <div className='no-article'>\n                <FaBatteryEmpty />\n                Empty!\n            </div>}\n        </div>\n    );\n};\n\nexport default CategoryList;","import { useNavigate } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport parse from 'html-react-parser';\nimport TruncateMarkup from 'react-truncate-markup';\nimport { FaRegEye } from 'react-icons/fa';\n\nimport CategoryList from './CategoryList';\nimport Footer from './Footer';\nimport { ArticlesContext } from '../contexts/articlesContext';\nimport { ProjectContext } from '../contexts/projectContext';\nimport { UserContext } from '../contexts/userContext';\nimport { computeDate, erroneous } from '../utils';\nimport './styles/HomePage.css';\n\nconst HomePage = () => {\n    const { articles } = useContext(ArticlesContext);\n    const { projectDispatcher } = useContext(ProjectContext);\n    const { userData } = useContext(UserContext);\n    const [categorizedArticles, setCategorizedArticles] = useState([]);\n    const [category, setCategory] = useState('latest');\n    const [index] = useState(() => {\n        return Math.floor(Math.random() * articles.length)\n    });\n    const [randomArticle, setRandomArticle] = useState(\n        articles.filter(article => article.published)[index]\n    );\n    const navigate = useNavigate();\n\n    const chooseCategory = (e) => {\n        const { id } = e.target;\n\n        setCategory(prev => prev !== id ? id : prev);\n    };\n    const active = arg => category === arg ? 'active' : '';\n\n    const showMore = (id) => {\n        !userData?.username ? erroneous({\n            message: 'Signup or Login to View More...'\n        }, projectDispatcher) :\n            navigate(`/articles/${randomArticle.slugName}`);\n    };\n\n    useEffect(() => {\n        const publishedArticles = articles.filter(article => article.published);\n\n        if (category === 'popular') {\n            axios.get(`/api/users`)\n                .then(res => {\n                    const noOfUsers = res.data.length;\n\n                    setCategorizedArticles(publishedArticles.filter(article => {\n                        return article.likes >= Math.ceil(noOfUsers / 4);\n                    }));\n                }).catch(err => {\n                    erroneous(err, projectDispatcher);\n                });\n        } else {\n            const maxDays = 6.048e+8;\n\n            setCategorizedArticles(publishedArticles.filter(article => {\n                const createdOn = new Date(article.createdOn);\n                return createdOn.getUTCMilliseconds() <= maxDays;\n            }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [articles, category]);\n\n    return (\n        <>\n            <main className=\"App__home\">\n                <section className='hero-section'>\n                    <div className=\"left-card\">\n                        <h2 className='title'>\n                            <span className='green-text'>CHI-Blogger</span> | \n                            Everything about <span className='green-text'>\n                                Health Fitness\n                            </span>\n                        </h2>\n                        <article className='content'>\n                            <p>\n                                Welcome<span className='red-text'>{userData?.username && ` ${userData.username}`}</span>!\n                                You are in the right place. <span className='red-text'>Health fitness</span> is our language here. Explore\n                                around, read our articles, and watch yourself grow healthwise!\n                            </p>\n                            <p className='tooltip'>\n                                Look above... The <span className='green-text'>Learn</span> tab takes you to a\n                                page where you can consume daily health fitness tips and advices to help you grow. The\n                                {' '}<span className='green-text'>About</span> tab gives you more insights about this platform.\n                            </p>\n                        </article>\n                    </div>\n                    <div className='right-card'>\n                        <div className='left'>\n                            <img src={require('../assets/img-1.jpg')} alt='hero sample 1' />\n                            <img src={require('../assets/img-3.jpg')} alt='hero sample 2' />\n                        </div>\n                        <div className='right'>\n                            <img src={require('../assets/img-2.jpg')} alt='hero sample 3' />\n                        </div>\n                    </div>\n                </section>\n                <section className='posts-container'>\n                    <div className='left-container'>\n                        <ul className='category-types'>\n                            <li\n                                className={active('latest')}\n                                onClick={chooseCategory}\n                                id='latest'\n                            >Latest</li>\n                            <li\n                                className={active('popular')}\n                                onClick={chooseCategory}\n                                id='popular'\n                            >Popular</li>\n                        </ul>\n                        <CategoryList\n                            categorizedArticles={categorizedArticles}\n                            setRandomArticle={setRandomArticle}\n                        />\n                    </div>\n                    <div className='right-container'>\n                        {randomArticle ?\n                            <>\n                                <div className='featured-post-info'>\n                                    <div className='left'>\n                                        {randomArticle.creator?.photo ?\n                                            <img src={randomArticle.creator.photo} alt={randomArticle.creator.username} /> :\n                                            <span className='without-photo'>\n                                                {randomArticle.creator?.username?.[0].toUpperCase()}\n                                            </span>\n                                        }\n                                        <p>By <span className='author'>{randomArticle.creator.username}</span></p>\n                                        <span className='timestamp'>\n                                            {computeDate(randomArticle.createdOn)}\n                                        </span>\n                                    </div>\n                                    <button className='share-btn' disabled={true}>Share</button>\n                                </div>\n                                <h1 className='post-title'>\n                                    {randomArticle.title}\n                                </h1>\n                                <img src={randomArticle.selectedFiles[0]} alt={randomArticle.title} />\n                                <TruncateMarkup lines={4}>\n                                    <article className='article-overview'>\n                                        {parse(randomArticle.content)}\n                                    </article>\n                                </TruncateMarkup>\n                                <button\n                                    className='view-more'\n                                    onClick={() => showMore(randomArticle._id)}\n                                >View More <FaRegEye /></button>\n                            </> :\n                            <article\n                                style={{ color: 'rgb(12, 93, 12)',\n                                        fontSize: 'calc(15px + 1vmin)',\n                                        textAlign: 'center',\n                                        margin: 'auto',\n                                        fontFamily: \"'Mochiy Pop P One', sans-serif\"\n                                    }}\n                            >\n                                <span style={{ color: 'maroon' }}>No Article At The Moment,</span>{' '}\n                                You will be notified when a new article is published by the admin.\n                            </article>\n                        }\n                    </div>\n                </section>\n            </main>\n            <Footer />\n        </>\n    );\n};\n\nexport default HomePage;","import axios from \"axios\";\n\nexport const updateProperty = (event, dispatch) => {\n    const { name, value } = event.target;\n\n    dispatch({\n        type: 'UPDATE_PROPERTY',\n        key: name,\n        value\n    });\n};\n\nexport const erroneous = (err, errDispatcher) => {\n    let errors = [];\n\n    if (err && err.response) {\n        if (err.response.data && err.response.data instanceof Array) {\n            errors = err.response.data;\n        } else if (err.response.statusText) {\n            errors.push(err.response.statusText);\n        }\n    }\n    if (err.message && errors.length === 0)\n        errors.push(err.message);\n\n    errDispatcher({\n        type: 'SET_ERROR',\n        errors: errors\n    });\n};\n\nexport const uploadImage = async (photo, dispatcher, errDispatcher) => {\n    const UPLOAD_URL = process.env.REACT_APP_UPLOAD_IMAGE_URL;\n    const data = new FormData();\n\n    data.append('file', photo);\n    data.append('upload_preset', 'chiblogger');\n    data.append('cloud_name', 'ovecjoe');\n\n    try {\n        const imageObj = await axios.post(UPLOAD_URL, data);\n        dispatcher({\n            type: 'UPDATE_PHOTO',\n            photoUrl: imageObj.data.url\n        });\n\n        return imageObj.data.url;\n    } catch (error) {\n        erroneous(error, errDispatcher);\n    }\n\n\n};\n\nexport const computeDate = (dateString) => {\n    const dateCreated = new Date(dateString);\n    const presentDate = new Date();\n\n    let result = presentDate.getFullYear() - dateCreated.getFullYear();\n\n    if (!result) {\n        result = presentDate.getMonth() - dateCreated.getMonth();\n        if (!result) {\n            result = presentDate.getDay() - dateCreated.getDay();\n            if (!result) {\n                result = presentDate.getHours() - dateCreated.getHours();\n                if (!result) {\n                    result = presentDate.getMinutes() - dateCreated.getMinutes();\n                    if (!result) {\n                        result = presentDate.getSeconds() - dateCreated.getSeconds();\n                        return `${result} seconds ago`;\n                    }\n                    return `${result} minutes ago`;\n                }\n                return `${result} hours ago`;\n            }\n            return `${result} days ago`;\n        }\n        return `${result} months ago`;\n    }\n    return `${result} years ago`;\n};"],"names":["useState","firstName","email","message","formData","setFormData","projectDispatcher","useContext","ProjectContext","userData","UserContext","config","headers","Authorization","token","handleChange","e","target","name","value","prev","className","method","onSubmit","preventDefault","axios","then","data","type","notificationId","catch","err","erroneous","htmlFor","placeholder","onChange","id","required","href","categorizedArticles","setRandomArticle","map","article","onClick","Object","keys","length","readArticle","src","selectedFiles","alt","title","computeDate","createdOn","creator","username","_id","articles","ArticlesContext","setCategorizedArticles","category","setCategory","Math","floor","random","index","filter","published","randomArticle","navigate","useNavigate","chooseCategory","active","arg","useEffect","publishedArticles","res","noOfUsers","likes","ceil","Date","getUTCMilliseconds","require","photo","toUpperCase","disabled","lines","parse","content","slugName","style","color","fontSize","textAlign","margin","fontFamily","Footer","updateProperty","event","dispatch","key","errDispatcher","errors","response","Array","statusText","push","uploadImage","dispatcher","UPLOAD_URL","process","REACT_APP_UPLOAD_IMAGE_URL","FormData","append","imageObj","photoUrl","url","dateString","dateCreated","presentDate","result","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds"],"sourceRoot":""}