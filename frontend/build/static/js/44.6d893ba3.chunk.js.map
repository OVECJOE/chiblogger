{"version":3,"file":"static/js/44.6d893ba3.chunk.js","mappings":"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","sources":["components/BlogArticle.js","components/NotFoundPage.js","utils.js","../node_modules/sentiment/languages|sync|/^/.//.*//index$"],"sourcesContent":["import parse from 'html-react-parser';\nimport { useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { AiFillLike } from 'react-icons/ai';\nimport { BiDownvote, BiUpvote } from 'react-icons/bi';\nimport { FaComments, FaCommentDots, FaEdit, FaArrowLeft } from 'react-icons/fa';\nimport { MdDelete } from 'react-icons/md';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport Sentiment from 'sentiment';\n\nimport { computeDate, erroneous } from '../utils';\nimport { ProjectContext } from '../contexts/projectContext';\nimport { UserContext } from '../contexts/userContext';\nimport { ArticlesContext } from '../contexts/articlesContext';\nimport NotFoundPage from './NotFoundPage';\nimport './styles/BlogArticle.css';\n\nconst BlogArticle = () => {\n    const { projectDispatcher } = useContext(ProjectContext);\n    const { articles, articlesDispatcher } = useContext(ArticlesContext);\n    const { userData } = useContext(UserContext);\n    const { slugName } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [newArticle, setNewArticle] = useState(\n        articles.filter(article => {\n            return article.published && article.slugName === slugName\n        })?.[0] ?? null\n    );\n    const [liked, setLiked] = useState(false);\n    const [comment, setComment] = useState({\n        type: '',\n        title: '',\n        content: '',\n    });\n\n    // sentiment analyser object\n    const sentiment = new Sentiment();\n    // configuration for axios request to the server\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            Authorization: `Bearer ${userData.token}`\n        }\n    };\n\n    useEffect(() => {\n        const likerIdx = newArticle.likers?.indexOf(userData._id);\n\n        if (likerIdx === -1) {\n            setLiked(false);\n        } else {\n            setLiked(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [newArticle]);\n\n    useEffect(() => {\n        if (comment.content) {\n            const result = sentiment.analyze(comment.content);\n            let conclusion;\n\n            if (result.score > 0) {\n                conclusion = 'positive';\n            } else if (result.score < 0) {\n                conclusion = 'negative';\n            } else {\n                conclusion = ''\n            }\n\n            setComment(prev => ({\n                ...prev,\n                type: conclusion\n            }))\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [comment.content]);\n\n    const likeArticle = () => {\n        axios.put(`/api/articles/${slugName}/like`, {}, config)\n            .then(res => {\n                setNewArticle(res.data);\n                articlesDispatcher({\n                    type: 'UPDATE_ARTICLE',\n                    article: res.data\n                });\n            })\n            .catch(err => {\n                erroneous(err, projectDispatcher);\n            });\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        setComment(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const submitComment = (e) => {\n        e.preventDefault();\n\n        axios.post(`/api/articles/${newArticle._id}/comments/new`,\n            comment, config)\n            .then(({ data }) => {\n                setNewArticle(data);\n                articlesDispatcher({\n                    type: 'UPDATE_ARTICLE',\n                    article: data\n                });\n                setComment({\n                    type: '', title: '', content: ''\n                });\n                projectDispatcher({\n                    type: 'SET_MESSAGE',\n                    message: `You have added new comment to article with ID ${newArticle._id}`\n                });\n            }).catch(err => {\n                erroneous(err, projectDispatcher);\n            });\n    };\n\n    const delComment = (id) => {\n        axios.delete(`/api/articles/${newArticle._id}/comments/${id}`,\n        config).then(({ data }) => {\n            setNewArticle(data);\n            articlesDispatcher({\n                type: 'UPDATE_ARTICLE',\n                article: data\n            });\n            projectDispatcher({\n                type: 'SET_MESSAGE',\n                message: `Comment with ID ${id} has been deleted successfully.`\n            });\n        }).catch(err => {\n            erroneous(err, projectDispatcher)\n        });\n    };\n\n    const generateShareLink = () => {\n        console.log(location.pathname);\n    };\n\n    return (\n        <>\n            <div className='navi-btns'>\n                <FaArrowLeft className='prev-btn' onClick={() => navigate(-1)} />\n            </div>\n            {newArticle ? <div className='blog-article-container'>\n                <section className='right-container article-section'>\n                    <div className='featured-post-info'>\n                        <div className='left'>\n                            {newArticle.creator?.photo ?\n                                <img src={newArticle.creator.photo} alt={newArticle.creator.username} /> :\n                                <span className='without-photo'>\n                                    {newArticle.creator?.username?.[0].toUpperCase()}\n                                </span>\n                            }\n                            <p>By <span className='author'>{newArticle.creator.username}</span></p>\n                            <span className='timestamp'>\n                                {computeDate(newArticle.createdOn)}\n                            </span>\n                        </div>\n                        <button className='share-btn' onClick={generateShareLink}>Share</button>\n                    </div>\n                    <h1 className='post-title'>\n                        {newArticle.title}\n                    </h1>\n                    <div className='article-photos'>\n                        {newArticle.selectedFiles.map(photo => {\n                            return (\n                                <img src={photo} alt={newArticle.title} key={uuid()} />\n                            );\n                        })}\n                    </div>\n                    <article className='article-content'>\n                        {parse(newArticle.content)}\n                    </article>\n                    <div className='article-actions-card'>\n                        <div className='likes-card'>\n                            <span className='like-btn'\n                                onClick={likeArticle}\n                                style={{\n                                    backgroundColor: liked ? '#e61b48' : '#7d6904',\n                                    color: liked ? '#fff' : 'rgb(6,43,16)'\n                                }}\n                            >\n                                <AiFillLike />\n                            </span>\n                            <span className='likes-count'>\n                                {liked ?\n                                    `You and ${newArticle.likes - 1} other${(newArticle.likes - 1) > 1 ? 's' : ''}` :\n                                    `${newArticle.likes} like${newArticle.likes > 1 ? 's' : ''}`\n                                }\n\n                            </span>\n                        </div>\n                        <div className='no-of-comments-card'>\n                            {newArticle?.comments?.length} comments\n                        </div>\n                    </div>\n                    <form className='comment-box' onSubmit={submitComment}>\n                        <input\n                            type='text'\n                            placeholder='Comment Responsibly...'\n                            name='content'\n                            value={comment.content}\n                            onChange={handleChange}\n                            required\n                        />\n                        <button>Send</button>\n                    </form>\n                    {comment.type && <div className='tooltip'>\n                        This a <strong>{comment.type}</strong> feedback.{' '}\n                        <span className='edit-type'>\n                            No? Change type: <select value={comment.type} name='type' onChange={handleChange} className='funny-edit'>\n                                <option value=''>Neutral</option>\n                                <option value='positive'>Positive</option>\n                                <option value='negative'>Negative</option>\n                            </select>\n                        </span>\n                    </div>}\n                </section>\n                <section className='comments-container'>\n                    <h1 className='heading'>\n                        Comments\n                        <FaComments />\n                    </h1>\n                    {newArticle.comments?.length ?\n                        <div className='comments'>\n                            {newArticle.comments.map(each => {\n                                return (\n                                    <article className='comment-card' key={uuid()}>\n                                        <div className='comment-type'>\n                                            <div className='red-line'></div>\n                                            <p>{each.type}</p>\n                                            <div className='red-line'></div>\n                                        </div> \n                                        <h4 className='comment-title'>{each.title || 'No Title'}</h4>\n                                        <p className='comment-content'>\n                                            {each.content}\n                                        </p>\n                                        <div className='comment-data'>\n                                            <p>\n                                                Written by <strong>{each.user.username}</strong> on\n                                                <time className='created'>{` ${each.createdOn.split('T')[0]}`}</time>\n                                            </p>\n                                            <span className='vote-btns'>\n                                                <div>\n                                                    <BiUpvote />\n                                                    <span className='votes'>{each.upvoteCount}</span>\n                                                </div>\n                                                <div>\n                                                    <BiDownvote />\n                                                    <span className='votes'>{each.downvoteCount}</span>\n                                                </div>\n                                            </span>\n                                        </div>\n                                        {userData._id === each.user._id &&\n                                            <div className='comment-action-btns'>\n                                                <FaEdit className='edit' />\n                                                <MdDelete className='del' onClick={() => delComment(each._id)} />\n                                            </div>\n                                        }\n                                    </article>\n                                );\n                            })}\n                        </div> :\n                        <article className='no-comment-text'>\n                            <FaCommentDots />\n                            Be the first to comment on this article.\n                        </article>\n                    }\n                </section>\n            </div> :\n                <NotFoundPage\n                    message='Login or Signup to read this article'\n                />\n            }\n        </>\n    );\n};\n\nexport default BlogArticle;","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst NotFoundPage = ({ message, notFound }) => {\n    const navigate = useNavigate();\n    const [timeLimit, setTimeLimit] = useState(4);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setTimeLimit(prev => prev - 1);\n        }, 2000);\n\n        if (notFound && !timeLimit) {\n            navigate('/');\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [notFound, timeLimit]);\n\n    return (\n        <div className='article-not-found-page'>\n            <p className='text'>\n                {!message ?\n                    `Redirecting in ${timeLimit} secs...` :\n                    message\n                }\n            </p>\n            <img src={require('../assets/not-found.png')} alt='not found' />\n        </div>\n    );\n};\n\nexport default NotFoundPage;","import axios from \"axios\";\n\nexport const updateProperty = (event, dispatch) => {\n    const { name, value } = event.target;\n\n    dispatch({\n        type: 'UPDATE_PROPERTY',\n        key: name,\n        value\n    });\n};\n\nexport const erroneous = (err, errDispatcher) => {\n    let errors = [];\n\n    if (err && err.response) {\n        if (err.response.data && err.response.data instanceof Array) {\n            errors = err.response.data;\n        } else if (err.response.statusText) {\n            errors.push(err.response.statusText);\n        }\n    }\n    if (err.message && errors.length === 0)\n        errors.push(err.message);\n\n    errDispatcher({\n        type: 'SET_ERROR',\n        errors: errors\n    });\n};\n\nexport const uploadImage = async (photo, dispatcher, errDispatcher) => {\n    const UPLOAD_URL = process.env.REACT_APP_UPLOAD_IMAGE_URL;\n    const data = new FormData();\n\n    data.append('file', photo);\n    data.append('upload_preset', 'chiblogger');\n    data.append('cloud_name', 'ovecjoe');\n\n    try {\n        const imageObj = await axios.post(UPLOAD_URL, data);\n        dispatcher({\n            type: 'UPDATE_PHOTO',\n            photoUrl: imageObj.data.url\n        });\n\n        return imageObj.data.url;\n    } catch (error) {\n        erroneous(error, errDispatcher);\n    }\n\n\n};\n\nexport const computeDate = (dateString) => {\n    const dateCreated = new Date(dateString);\n    const presentDate = new Date();\n\n    let result = presentDate.getFullYear() - dateCreated.getFullYear();\n\n    if (!result) {\n        result = presentDate.getMonth() - dateCreated.getMonth();\n        if (!result) {\n            result = presentDate.getDay() - dateCreated.getDay();\n            if (!result) {\n                result = presentDate.getHours() - dateCreated.getHours();\n                if (!result) {\n                    result = presentDate.getMinutes() - dateCreated.getMinutes();\n                    if (!result) {\n                        result = presentDate.getSeconds() - dateCreated.getSeconds();\n                        return `${result} seconds ago`;\n                    }\n                    return `${result} minutes ago`;\n                }\n                return `${result} hours ago`;\n            }\n            return `${result} days ago`;\n        }\n        return `${result} months ago`;\n    }\n    return `${result} years ago`;\n};","var map = {\n\t\"./en/index\": 3039\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7076;"],"names":["projectDispatcher","useContext","ProjectContext","ArticlesContext","articles","articlesDispatcher","userData","UserContext","slugName","useParams","navigate","useNavigate","location","useLocation","useState","filter","article","published","newArticle","setNewArticle","liked","setLiked","type","title","content","comment","setComment","sentiment","Sentiment","config","headers","Authorization","token","useEffect","likerIdx","likers","indexOf","_id","conclusion","result","analyze","score","prev","handleChange","e","target","name","value","className","onClick","creator","photo","src","alt","username","toUpperCase","computeDate","createdOn","console","log","pathname","selectedFiles","map","uuid","parse","axios","then","res","data","catch","err","erroneous","style","backgroundColor","color","likes","comments","length","onSubmit","preventDefault","message","placeholder","onChange","required","each","user","split","upvoteCount","downvoteCount","id","NotFoundPage","notFound","timeLimit","setTimeLimit","setTimeout","require","updateProperty","event","dispatch","key","errDispatcher","errors","response","Array","statusText","push","uploadImage","dispatcher","process","FormData","append","imageObj","photoUrl","url","dateString","dateCreated","Date","presentDate","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}