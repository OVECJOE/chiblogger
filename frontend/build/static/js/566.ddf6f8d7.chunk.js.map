{"version":3,"file":"static/js/566.ddf6f8d7.chunk.js","mappings":"wFA0BAA,EAAOC,QAxBa,SAAUC,EAAIC,EAAMC,GAItC,QAHAA,EAAmBC,OAAOD,kBAQtBA,EAAiBF,GAGjBA,EAAGI,cAMLH,EAAKI,QAAQ,WAAW,SAAUC,EAAMC,GACtC,OAAOA,EAAOC,oB,oBCpBpB,IAAIC,EAAgBC,EAAQ,MA+F5BZ,EAAOC,QAxFP,SAAoBY,GAElB,IAAIC,EAAcH,EAAcE,EAAM,eAClCE,EAAWC,WAAWF,EAAa,IAGvC,GAAIA,IAAgBC,EAAW,GAAI,CAEjC,IAAIE,EAAiBJ,EAAKK,MAAMC,WAChCN,EAAKK,MAAMC,WAAaL,EAAc,KAGtCA,EAAcH,EAAcE,EAAM,eAClCE,EAAWC,WAAWF,EAAa,IAG/BG,EACFJ,EAAKK,MAAMC,WAAaF,SAEjBJ,EAAKK,MAAMC,WA8BtB,IAvBmC,IAA/BL,EAAYM,QAAQ,OACtBL,GAAY,EACZA,GAAY,IAE4B,IAA/BD,EAAYM,QAAQ,OAC7BL,GAAY,GACZA,GAAY,OAE4B,IAA/BD,EAAYM,QAAQ,OAC7BL,GAAY,GACZA,GAAY,OAE4B,IAA/BD,EAAYM,QAAQ,MAC7BL,GAAY,IAE4B,IAA/BD,EAAYM,QAAQ,QAC7BL,GAAY,IAIdA,EAAWM,KAAKC,MAAMP,GAGF,WAAhBD,EAA0B,CAE5B,IAAIS,EAAWV,EAAKU,SAChBC,EAAQC,SAASC,cAAcH,GACnCC,EAAMG,UAAY,SAIa,aAA3BJ,EAASb,eACXc,EAAMI,aAAa,OAAQ,KAI7B,IAAIC,EAAclB,EAAcE,EAAM,aACtCW,EAAMN,MAAMY,SAAWD,EAKvBL,EAAMN,MAAMa,QAAU,MACtBP,EAAMN,MAAMc,OAAS,MAGrB,IAAIC,EAAOR,SAASQ,KACpBA,EAAKC,YAAYV,GAIjBT,EADaS,EAAMW,aAInBF,EAAKG,YAAYZ,GAInB,OAAOT,I,gFC5FLsB,EAAYC,OAAOC,OACnB,SAAkBC,GACd,MAAwB,kBAAVA,GAAsBA,IAAUA,GAWtD,SAASC,EAAeC,EAAWC,GAC/B,GAAID,EAAUE,SAAWD,EAAWC,OAChC,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUE,OAAQC,IAClC,GAdSC,EAcIJ,EAAUG,GAdPE,EAcWJ,EAAWE,KAbtCC,IAAUC,GAGVV,EAAUS,IAAUT,EAAUU,IAW1B,OAAO,EAfnB,IAAiBD,EAAOC,EAkBpB,OAAO,EA0BX,MAvBA,SAAoBC,EAAUC,GAE1B,IAAIC,OADY,IAAZD,IAAsBA,EAAUR,GAEpC,IACIU,EADAC,EAAW,GAEXC,GAAa,EAejB,OAdA,WAEI,IADA,IAAIC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAUZ,OAAQW,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,OAAIF,GAAcH,IAAaO,MAAQR,EAAQK,EAASF,KAGxDD,EAAaH,EAASU,MAAMD,KAAMH,GAClCD,GAAa,EACbH,EAAWO,KACXL,EAAWE,GALAH,I,kBC9BfQ,EAAW,WACX,GAAmB,qBAARC,IACP,OAAOA,IASX,SAASC,EAASC,EAAKC,GACnB,IAAIC,GAAU,EAQd,OAPAF,EAAIG,MAAK,SAAUC,EAAOC,GACtB,OAAID,EAAM,KAAOH,IACbC,EAASG,GACF,MAIRH,EAEX,OAAsB,WAClB,SAASI,IACLX,KAAKY,YAAc,GAuEvB,OArEAC,OAAOC,eAAeH,EAAQI,UAAW,OAAQ,CAI7CC,IAAK,WACD,OAAOhB,KAAKY,YAAYzB,QAE5B8B,YAAY,EACZC,cAAc,IAMlBP,EAAQI,UAAUC,IAAM,SAAUV,GAC9B,IAAII,EAAQN,EAASJ,KAAKY,YAAaN,GACnCG,EAAQT,KAAKY,YAAYF,GAC7B,OAAOD,GAASA,EAAM,IAO1BE,EAAQI,UAAUI,IAAM,SAAUb,EAAKvB,GACnC,IAAI2B,EAAQN,EAASJ,KAAKY,YAAaN,IAClCI,EACDV,KAAKY,YAAYF,GAAO,GAAK3B,EAG7BiB,KAAKY,YAAYQ,KAAK,CAACd,EAAKvB,KAOpC4B,EAAQI,UAAUM,OAAS,SAAUf,GACjC,IAAIgB,EAAUtB,KAAKY,YACfF,EAAQN,EAASkB,EAAShB,IACzBI,GACDY,EAAQC,OAAOb,EAAO,IAO9BC,EAAQI,UAAUS,IAAM,SAAUlB,GAC9B,SAAUF,EAASJ,KAAKY,YAAaN,IAKzCK,EAAQI,UAAUU,MAAQ,WACtBzB,KAAKY,YAAYW,OAAO,IAO5BZ,EAAQI,UAAUW,QAAU,SAAUC,EAAUC,QAChC,IAARA,IAAkBA,EAAM,MAC5B,IAAK,IAAI9B,EAAK,EAAG+B,EAAK7B,KAAKY,YAAad,EAAK+B,EAAG1C,OAAQW,IAAM,CAC1D,IAAIW,EAAQoB,EAAG/B,GACf6B,EAASG,KAAKF,EAAKnB,EAAM,GAAIA,EAAM,MAGpCE,EAzEJ,GAtBI,GAsGXoB,EAA8B,qBAAXnF,QAA8C,qBAAboB,UAA4BpB,OAAOoB,WAAaA,SAGpGgE,EACsB,qBAAXC,EAAAA,GAA0BA,EAAAA,EAAOrE,OAASA,KAC1CqE,EAAAA,EAES,qBAATC,MAAwBA,KAAKtE,OAASA,KACtCsE,KAEW,qBAAXtF,QAA0BA,OAAOgB,OAASA,KAC1ChB,OAGJuF,SAAS,cAATA,GASPC,EACqC,oBAA1BC,sBAIAA,sBAAsBC,KAAKN,GAE/B,SAAUL,GAAY,OAAOY,YAAW,WAAc,OAAOZ,EAASa,KAAKC,SAAW,IAAO,KAqExG,IAGIC,EAAiB,CAAC,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAE/EC,EAAwD,qBAArBC,iBAInCC,EAA0C,WAM1C,SAASA,IAML7C,KAAK8C,YAAa,EAMlB9C,KAAK+C,sBAAuB,EAM5B/C,KAAKgD,mBAAqB,KAM1BhD,KAAKiD,WAAa,GAClBjD,KAAKkD,iBAAmBlD,KAAKkD,iBAAiBZ,KAAKtC,MACnDA,KAAKmD,QAjGb,SAAmBxB,EAAUyB,GACzB,IAAIC,GAAc,EAAOC,GAAe,EAAOC,EAAe,EAO9D,SAASC,IACDH,IACAA,GAAc,EACd1B,KAEA2B,GACAG,IAUR,SAASC,IACLtB,EAAwBoB,GAO5B,SAASC,IACL,IAAIE,EAAYnB,KAAKC,MACrB,GAAIY,EAAa,CAEb,GAAIM,EAAYJ,EA7CN,EA8CN,OAMJD,GAAe,OAGfD,GAAc,EACdC,GAAe,EACff,WAAWmB,EAAiBN,GAEhCG,EAAeI,EAEnB,OAAOF,EA6CYG,CAAS5D,KAAKmD,QAAQb,KAAKtC,MAzC9B,IAyMhB,OAxJA6C,EAAyB9B,UAAU8C,YAAc,SAAUC,IACjD9D,KAAKiD,WAAWtF,QAAQmG,IAC1B9D,KAAKiD,WAAW7B,KAAK0C,GAGpB9D,KAAK8C,YACN9C,KAAK+D,YASblB,EAAyB9B,UAAUiD,eAAiB,SAAUF,GAC1D,IAAIG,EAAYjE,KAAKiD,WACjBvC,EAAQuD,EAAUtG,QAAQmG,IAEzBpD,GACDuD,EAAU1C,OAAOb,EAAO,IAGvBuD,EAAU9E,QAAUa,KAAK8C,YAC1B9C,KAAKkE,eASbrB,EAAyB9B,UAAUoC,QAAU,WACnBnD,KAAKmE,oBAIvBnE,KAAKmD,WAWbN,EAAyB9B,UAAUoD,iBAAmB,WAElD,IAAIC,EAAkBpE,KAAKiD,WAAWoB,QAAO,SAAUP,GACnD,OAAOA,EAASQ,eAAgBR,EAASS,eAQ7C,OADAH,EAAgB1C,SAAQ,SAAUoC,GAAY,OAAOA,EAASU,qBACvDJ,EAAgBjF,OAAS,GAQpC0D,EAAyB9B,UAAUgD,SAAW,WAGrChC,IAAa/B,KAAK8C,aAMvB9E,SAASyG,iBAAiB,gBAAiBzE,KAAKkD,kBAChDtG,OAAO6H,iBAAiB,SAAUzE,KAAKmD,SACnCR,GACA3C,KAAKgD,mBAAqB,IAAIJ,iBAAiB5C,KAAKmD,SACpDnD,KAAKgD,mBAAmB0B,QAAQ1G,SAAU,CACtC2G,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAIb9G,SAASyG,iBAAiB,qBAAsBzE,KAAKmD,SACrDnD,KAAK+C,sBAAuB,GAEhC/C,KAAK8C,YAAa,IAQtBD,EAAyB9B,UAAUmD,YAAc,WAGxCnC,GAAc/B,KAAK8C,aAGxB9E,SAAS+G,oBAAoB,gBAAiB/E,KAAKkD,kBACnDtG,OAAOmI,oBAAoB,SAAU/E,KAAKmD,SACtCnD,KAAKgD,oBACLhD,KAAKgD,mBAAmBgC,aAExBhF,KAAK+C,sBACL/E,SAAS+G,oBAAoB,qBAAsB/E,KAAKmD,SAE5DnD,KAAKgD,mBAAqB,KAC1BhD,KAAK+C,sBAAuB,EAC5B/C,KAAK8C,YAAa,IAStBD,EAAyB9B,UAAUmC,iBAAmB,SAAUrB,GAC5D,IAAIoD,EAAKpD,EAAGqD,aAAcA,OAAsB,IAAPD,EAAgB,GAAKA,EAEvCvC,EAAelC,MAAK,SAAUF,GACjD,SAAU4E,EAAavH,QAAQ2C,OAG/BN,KAAKmD,WAQbN,EAAyBsC,YAAc,WAInC,OAHKnF,KAAKoF,YACNpF,KAAKoF,UAAY,IAAIvC,GAElB7C,KAAKoF,WAOhBvC,EAAyBuC,UAAY,KAC9BvC,EAhMmC,GA0M1CwC,EAAsB,SAAUC,EAAQC,GACxC,IAAK,IAAIzF,EAAK,EAAG+B,EAAKhB,OAAO2E,KAAKD,GAAQzF,EAAK+B,EAAG1C,OAAQW,IAAM,CAC5D,IAAIQ,EAAMuB,EAAG/B,GACbe,OAAOC,eAAewE,EAAQhF,EAAK,CAC/BvB,MAAOwG,EAAMjF,GACbW,YAAY,EACZwE,UAAU,EACVvE,cAAc,IAGtB,OAAOoE,GASPI,EAAe,SAAUJ,GAOzB,OAHkBA,GAAUA,EAAOK,eAAiBL,EAAOK,cAAcC,aAGnD5D,GAItB6D,EAAYC,EAAe,EAAG,EAAG,EAAG,GAOxC,SAASC,EAAQhH,GACb,OAAOxB,WAAWwB,IAAU,EAShC,SAASiH,EAAeC,GAEpB,IADA,IAAIC,EAAY,GACPpG,EAAK,EAAGA,EAAKC,UAAUZ,OAAQW,IACpCoG,EAAUpG,EAAK,GAAKC,UAAUD,GAElC,OAAOoG,EAAUC,QAAO,SAAUC,EAAMC,GAEpC,OAAOD,EAAOL,EADFE,EAAO,UAAYI,EAAW,aAE3C,GAmCP,SAASC,EAA0BhB,GAG/B,IAAIiB,EAAcjB,EAAOiB,YAAaC,EAAelB,EAAOkB,aAS5D,IAAKD,IAAgBC,EACjB,OAAOX,EAEX,IAAII,EAASP,EAAYJ,GAAQ3I,iBAAiB2I,GAC9CmB,EA3CR,SAAqBR,GAGjB,IAFA,IACIQ,EAAW,GACN3G,EAAK,EAAG4G,EAFD,CAAC,MAAO,QAAS,SAAU,QAED5G,EAAK4G,EAAYvH,OAAQW,IAAM,CACrE,IAAIuG,EAAWK,EAAY5G,GACvBf,EAAQkH,EAAO,WAAaI,GAChCI,EAASJ,GAAYN,EAAQhH,GAEjC,OAAO0H,EAmCQE,CAAYV,GACvBW,EAAWH,EAASI,KAAOJ,EAASK,MACpCC,EAAUN,EAASO,IAAMP,EAASQ,OAKlCC,EAAQnB,EAAQE,EAAOiB,OAAQC,EAASpB,EAAQE,EAAOkB,QAqB3D,GAlByB,eAArBlB,EAAOmB,YAOHxJ,KAAKC,MAAMqJ,EAAQN,KAAcL,IACjCW,GAASlB,EAAeC,EAAQ,OAAQ,SAAWW,GAEnDhJ,KAAKC,MAAMsJ,EAASJ,KAAaP,IACjCW,GAAUnB,EAAeC,EAAQ,MAAO,UAAYc,KAoDhE,SAA2BzB,GACvB,OAAOA,IAAWI,EAAYJ,GAAQtH,SAASqJ,gBA9C1CC,CAAkBhC,GAAS,CAK5B,IAAIiC,EAAgB3J,KAAKC,MAAMqJ,EAAQN,GAAYL,EAC/CiB,EAAiB5J,KAAKC,MAAMsJ,EAASJ,GAAWP,EAMpB,IAA5B5I,KAAK6J,IAAIF,KACTL,GAASK,GAEoB,IAA7B3J,KAAK6J,IAAID,KACTL,GAAUK,GAGlB,OAAO1B,EAAeW,EAASI,KAAMJ,EAASO,IAAKE,EAAOC,GAQ9D,IAAIO,EAGkC,qBAAvBC,mBACA,SAAUrC,GAAU,OAAOA,aAAkBI,EAAYJ,GAAQqC,oBAKrE,SAAUrC,GAAU,OAAQA,aAAkBI,EAAYJ,GAAQsC,YAC3C,oBAAnBtC,EAAOuC,SAiBtB,SAASC,EAAexC,GACpB,OAAKvD,EAGD2F,EAAqBpC,GAhH7B,SAA2BA,GACvB,IAAIyC,EAAOzC,EAAOuC,UAClB,OAAO/B,EAAe,EAAG,EAAGiC,EAAKb,MAAOa,EAAKZ,QA+GlCa,CAAkB1C,GAEtBgB,EAA0BhB,GALtBO,EAuCf,SAASC,EAAemC,EAAGC,EAAGhB,EAAOC,GACjC,MAAO,CAAEc,EAAGA,EAAGC,EAAGA,EAAGhB,MAAOA,EAAOC,OAAQA,GAO/C,IAAIgB,EAAmC,WAMnC,SAASA,EAAkB7C,GAMvBtF,KAAKoI,eAAiB,EAMtBpI,KAAKqI,gBAAkB,EAMvBrI,KAAKsI,aAAexC,EAAe,EAAG,EAAG,EAAG,GAC5C9F,KAAKsF,OAASA,EA0BlB,OAlBA6C,EAAkBpH,UAAUwH,SAAW,WACnC,IAAIC,EAAOV,EAAe9H,KAAKsF,QAE/B,OADAtF,KAAKsI,aAAeE,EACZA,EAAKtB,QAAUlH,KAAKoI,gBACxBI,EAAKrB,SAAWnH,KAAKqI,iBAQ7BF,EAAkBpH,UAAU0H,cAAgB,WACxC,IAAID,EAAOxI,KAAKsI,aAGhB,OAFAtI,KAAKoI,eAAiBI,EAAKtB,MAC3BlH,KAAKqI,gBAAkBG,EAAKrB,OACrBqB,GAEJL,EAnD4B,GAsDnCO,EAOA,SAA6BpD,EAAQqD,GACjC,IAAIC,EA/FZ,SAA4B/G,GACxB,IAAIoG,EAAIpG,EAAGoG,EAAGC,EAAIrG,EAAGqG,EAAGhB,EAAQrF,EAAGqF,MAAOC,EAAStF,EAAGsF,OAElD0B,EAAoC,qBAApBC,gBAAkCA,gBAAkBjI,OACpE2H,EAAO3H,OAAOkI,OAAOF,EAAO9H,WAShC,OAPAsE,EAAmBmD,EAAM,CACrBP,EAAGA,EAAGC,EAAGA,EAAGhB,MAAOA,EAAOC,OAAQA,EAClCH,IAAKkB,EACLpB,MAAOmB,EAAIf,EACXD,OAAQE,EAASe,EACjBrB,KAAMoB,IAEHO,EAkFeQ,CAAmBL,GAOrCtD,EAAmBrF,KAAM,CAAEsF,OAAQA,EAAQsD,YAAaA,KAK5DK,EAAmC,WAWnC,SAASA,EAAkBtH,EAAUuH,EAAYC,GAc7C,GAPAnJ,KAAKoJ,oBAAsB,GAM3BpJ,KAAKqJ,cAAgB,IAAInJ,EACD,oBAAbyB,EACP,MAAM,IAAI2H,UAAU,2DAExBtJ,KAAKuJ,UAAY5H,EACjB3B,KAAKwJ,YAAcN,EACnBlJ,KAAKyJ,aAAeN,EAoHxB,OA5GAF,EAAkBlI,UAAU2D,QAAU,SAAUY,GAC5C,IAAKvF,UAAUZ,OACX,MAAM,IAAImK,UAAU,4CAGxB,GAAuB,qBAAZI,SAA6BA,mBAAmB7I,OAA3D,CAGA,KAAMyE,aAAkBI,EAAYJ,GAAQoE,SACxC,MAAM,IAAIJ,UAAU,yCAExB,IAAIK,EAAe3J,KAAKqJ,cAEpBM,EAAanI,IAAI8D,KAGrBqE,EAAaxI,IAAImE,EAAQ,IAAI6C,EAAkB7C,IAC/CtF,KAAKwJ,YAAY3F,YAAY7D,MAE7BA,KAAKwJ,YAAYrG,aAQrB8F,EAAkBlI,UAAU6I,UAAY,SAAUtE,GAC9C,IAAKvF,UAAUZ,OACX,MAAM,IAAImK,UAAU,4CAGxB,GAAuB,qBAAZI,SAA6BA,mBAAmB7I,OAA3D,CAGA,KAAMyE,aAAkBI,EAAYJ,GAAQoE,SACxC,MAAM,IAAIJ,UAAU,yCAExB,IAAIK,EAAe3J,KAAKqJ,cAEnBM,EAAanI,IAAI8D,KAGtBqE,EAAatI,OAAOiE,GACfqE,EAAavD,MACdpG,KAAKwJ,YAAYxF,eAAehE,SAQxCiJ,EAAkBlI,UAAUiE,WAAa,WACrChF,KAAK6J,cACL7J,KAAKqJ,cAAc5H,QACnBzB,KAAKwJ,YAAYxF,eAAehE,OAQpCiJ,EAAkBlI,UAAUuD,aAAe,WACvC,IAAIwF,EAAQ9J,KACZA,KAAK6J,cACL7J,KAAKqJ,cAAc3H,SAAQ,SAAUqI,GAC7BA,EAAYxB,YACZuB,EAAMV,oBAAoBhI,KAAK2I,OAU3Cd,EAAkBlI,UAAUyD,gBAAkB,WAE1C,GAAKxE,KAAKuE,YAAV,CAGA,IAAI3C,EAAM5B,KAAKyJ,aAEXnI,EAAUtB,KAAKoJ,oBAAoBY,KAAI,SAAUD,GACjD,OAAO,IAAIrB,EAAoBqB,EAAYzE,OAAQyE,EAAYtB,oBAEnEzI,KAAKuJ,UAAUzH,KAAKF,EAAKN,EAASM,GAClC5B,KAAK6J,gBAOTZ,EAAkBlI,UAAU8I,YAAc,WACtC7J,KAAKoJ,oBAAoB7H,OAAO,IAOpC0H,EAAkBlI,UAAUwD,UAAY,WACpC,OAAOvE,KAAKoJ,oBAAoBjK,OAAS,GAEtC8J,EAlJ4B,GAwJnChF,EAA+B,qBAAZgG,QAA0B,IAAIA,QAAY,IAAI/J,EAKjEgK,EAOA,SAASA,EAAevI,GACpB,KAAM3B,gBAAgBkK,GAClB,MAAM,IAAIZ,UAAU,sCAExB,IAAKvJ,UAAUZ,OACX,MAAM,IAAImK,UAAU,4CAExB,IAAIJ,EAAarG,EAAyBsC,cACtCrB,EAAW,IAAImF,EAAkBtH,EAAUuH,EAAYlJ,MAC3DiE,EAAU9C,IAAInB,KAAM8D,IAK5B,CACI,UACA,YACA,cACFpC,SAAQ,SAAUyI,GAChBD,EAAenJ,UAAUoJ,GAAU,WAC/B,IAAItI,EACJ,OAAQA,EAAKoC,EAAUjD,IAAIhB,OAAOmK,GAAQlK,MAAM4B,EAAI9B,eAI5D,IAQA,EAN2C,qBAA5BiC,EAASkI,eACTlI,EAASkI,eAEbA,EC14BX,EAlBsB,CACpBE,WAAY,CACVC,eAAgB,KAChBC,SAAU,SAAkBC,GAC1B,OAAOA,EAAIpL,QAAU,IAGzBqL,MAAO,CACLH,eAAgB,SAAwBE,GACtC,OAAOA,EAAIE,MAAM,sBAEnBH,SAAU,SAAkBC,GAC1B,MAAQ,oBAAoBG,KAAKH,MCZ5BI,EAAO,SAAcpF,GAC9B,OAAOA,EAAMqF,UAAY,MAE3BD,EAAKE,YAAa,EAEX,ICHHC,EAAQC,EDGDC,EAAkB,SAAyBC,GACpD,SAAUA,IAAWA,EAAQC,OAAoC,IAA5BD,EAAQC,KAAKL,aAGzCM,EAAiB,SCTxBC,EAAe,WAAc,SAASC,EAAiB/F,EAAQC,GAAS,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAMpG,OAAQC,IAAK,CAAE,IAAIkM,EAAa/F,EAAMnG,GAAIkM,EAAWrK,WAAaqK,EAAWrK,aAAc,EAAOqK,EAAWpK,cAAe,EAAU,UAAWoK,IAAYA,EAAW7F,UAAW,GAAM5E,OAAOC,eAAewE,EAAQgG,EAAWhL,IAAKgL,IAAiB,OAAO,SAAUC,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYH,EAAiBE,EAAYxK,UAAWyK,GAAiBC,GAAaJ,EAAiBE,EAAaE,GAAqBF,GAA7gB,GAIfG,EAA4B,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAwB,SAAUC,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,oBAAXF,QAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAO5K,UAAY,gBAAkB8K,GAElQE,EAAWlL,OAAOmL,QAAU,SAAU1G,GAAU,IAAK,IAAIlG,EAAI,EAAGA,EAAIW,UAAUZ,OAAQC,IAAK,CAAE,IAAI6M,EAASlM,UAAUX,GAAI,IAAK,IAAIkB,KAAO2L,EAAcpL,OAAOE,UAAUmL,eAAepK,KAAKmK,EAAQ3L,KAAQgF,EAAOhF,GAAO2L,EAAO3L,IAAY,OAAOgF,GAgBvP,IAAI6G,GACI,EADJA,GAEK,EAGLC,EAAW,SAASA,EAAShP,GAC/B,IAAIiP,EAAStM,UAAUZ,OAAS,QAAsBmN,IAAjBvM,UAAU,GAAmBA,UAAU,GAAK,GAEjF,IAAK3C,EACH,OAAOiP,EACF,GAAoB,kBAATjP,EAChB,OAAOiP,EAASjP,EACX,GAAI4N,EAAgB5N,GACzB,OAAOiP,EAASlB,EAElB,IAAIP,EAAW2B,MAAMC,QAAQpP,GAAQA,EAAOA,EAAKmI,MAAMqF,UAAY,GAEnE,OAAOyB,EAASI,EAAAA,SAAAA,IAAmB7B,GAAU,SAAU8B,GACrD,OAAON,EAASM,MACfC,KAAK,KAGNC,EAAoB,SAA2BxP,EAAMwN,EAAUiC,EAAUC,GAgB3E,OAAOf,EAAS,GAAI3O,EAAM,CACxBmI,MAAOwG,EAAS,GAAI3O,EAAKmI,MAAO,CAC9B9H,MAAOsO,EAAS,GAAI3O,EAAKmI,MAAM9H,MAhB7BoP,EACK,CAELE,SAAU3P,EAAKmI,MAAM9H,OAAS,IAAIsP,SAAW,SAE5B,IAAVD,EACF,CAGLC,SAAU3P,EAAKmI,MAAM9H,OAAS,IAAIsP,SAAW,gBAEnC,IAMZnC,SAAUA,OAKZoC,EAAe,SAASA,EAAa5P,GACvC,QAAY,MAARA,IAAgB,CAAC,SAAU,UAAU6P,SAAyB,qBAAT7P,EAAuB,YAAcsO,EAAQtO,MAAU4N,EAAgB5N,KAEhG,oBAAdA,EAAK8N,QAUnB9N,EAAKmI,QAASnI,EAAKmI,MAAMqF,UACpB6B,EAAAA,SAAAA,QAAuBrP,EAAKmI,MAAMqF,UAAUzE,QAAO,SAAU+G,EAASR,GAC3E,OAAOQ,GAAWF,EAAaN,MAC9B,KAMHS,GAAkBpC,EAAQD,EAAS,SAAUsC,GAG/C,SAASD,EAAe5H,IArF1B,SAAyB8H,EAAU9B,GAAe,KAAM8B,aAAoB9B,GAAgB,MAAM,IAAIjC,UAAU,qCAsF5GgE,CAAgBtN,KAAMmN,GAEtB,IAAIrD,EAtFR,SAAoC5H,EAAMJ,GAAQ,IAAKI,EAAQ,MAAM,IAAIqL,eAAe,6DAAgE,OAAOzL,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BI,EAAPJ,EAsFlN0L,CAA2BxN,KAAMoN,EAAiBtL,KAAK9B,KAAMuF,IAsEzE,OApEAuE,EAAMpM,WAAa,KACnBoM,EAAM2D,kBAAoB,GAC1B3D,EAAM4D,gBAAiB,EACvB5D,EAAM6D,mBAAoB,EAC1B7D,EAAM8D,UAAW,EACjB9D,EAAM+D,eAAiB,KACvB/D,EAAMgE,kBAAmB,EACzBhE,EAAMiE,aAAeC,EAAW5B,GAChCtC,EAAMmE,oBAAsBD,EAAWlE,EAAMoE,wBAC7CpE,EAAMqE,iBAAmBH,EAAWhB,GAEpClD,EAAMsE,WAAa,SAAUC,GACtBvE,EAAMgE,mBACThE,EAAMgE,kBAAmB,EACzBhE,EAAMvE,MAAM6I,WAAWC,KAI3BvE,EAAMwE,aAAe,SAAU7R,EAAI8R,GAOjC,GALIA,GACFA,EAAmBvJ,cAIhBvI,EAAI,OAAO,KAGhB,IAAI+R,GAAgB,EAoBhBC,EAAiBF,GAAsB,IAAIrE,GAnB1B,WACfsE,EAEFA,GAAgB,GAGhB1E,EAAM4D,gBAAiB,EACvB5D,EAAM+D,eAAiB,KAEvB/D,EAAM4E,SAAS,CACbC,KAAM7E,EAAM8E,WACX,WACD9E,EAAM4D,gBAAiB,EACvB5D,EAAMgE,kBAAmB,EACzBhE,EAAM+E,kBASZ,OAFAJ,EAAe/J,QAAQjI,GAEhBgS,GAGT3E,EAAMgF,OAAS,SAAUrS,GACvB,IAAIsS,EAAUjF,EAAMrN,KAAOA,EAC3BqN,EAAMrN,GAAKA,EAGPsS,IACFjF,EAAM2E,eAAiB3E,EAAMwE,aAAa7R,EAAIqN,EAAM2E,kBAIxD3E,EAAMkF,MAAQ,CACZL,KAAM7E,EAAMmE,oBAAoBnE,EAAMvE,MAAMqF,WAEvCd,EA+RT,OAzbF,SAAmBmF,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAI5F,UAAU,kEAAoE4F,GAAeD,EAASlO,UAAYF,OAAOkI,OAAOmG,GAAcA,EAAWnO,UAAW,CAAE+K,YAAa,CAAE/M,MAAOkQ,EAAUhO,YAAY,EAAOwE,UAAU,EAAMvE,cAAc,KAAegO,IAAYrO,OAAOsO,eAAiBtO,OAAOsO,eAAeF,EAAUC,GAAcD,EAASG,UAAYF,GA+E/dG,CAAUlC,EAAgBC,GA8E1BD,EAAepM,UAAUuO,kBAAoB,WACtCtP,KAAKkN,UAMVlN,KAAKtC,WAAasC,KAAKuF,MAAM7H,YAAc6R,IAAcvP,KAAKvD,IAC9DuD,KAAK6O,aAGP1B,EAAepM,UAAUyO,iCAAmC,SAA0CC,GACpG,IAAIC,EAAS1P,KAEbA,KAAK0N,gBAAiB,EACtB1N,KAAK6N,eAAiB,KAEtB7N,KAAK0O,SAAS,CACZC,KAAM3O,KAAKiO,oBAAoBwB,EAAU7E,YACxC,WACI8E,EAAOxC,UAIZwC,EAAOhS,WAAa+R,EAAU/R,YAAc6R,IAAcG,EAAOjT,IACjEiT,EAAOhC,gBAAiB,EACxBgC,EAAOb,gBAIX1B,EAAepM,UAAU4O,mBAAqB,WAC5C,IAA4B,IAAxB3P,KAAK0N,iBAA6C,IAAjB1N,KAAKkN,QAI1C,OAAIlN,KAAK4N,SAIqB,OAAxB5N,KAAK6N,gBAA2B7N,KAAKgP,MAAML,OAAS3O,KAAK6N,oBAE3D7N,KAAK0O,SAAS,CACZC,KAAM3O,KAAK6N,sBAOf7N,KAAKoO,YAA8B,QAKjCpO,KAAKyN,kBAAkBtO,SACrBa,KAAK4P,QACP5P,KAAK6N,eAAiB7N,KAAKgP,MAAML,KAKjC3O,KAAKyN,kBAAkBlM,OAAOvB,KAAKyN,kBAAkBtO,OAAS,EAAG,EAAGgN,EAAaA,IAEjFnM,KAAKyN,kBAAkBrM,KAAK+K,GAG9BnM,KAAK6P,SAAS7P,KAAK4O,SAAU5O,KAAKyN,sBAItCN,EAAepM,UAAU+O,qBAAuB,WAC9C9P,KAAKtC,WAAa,KAClBsC,KAAK6N,eAAiB,KACtB7N,KAAKyN,kBAAoB,IAG3BN,EAAepM,UAAU8N,SAAW,WAClC,GAAI7O,KAAK4P,OAKP,OAHA5P,KAAK0N,gBAAiB,OACtB1N,KAAKoO,YAA8B,GAKrCpO,KAAK+P,wBAGP5C,EAAepM,UAAUmN,uBAAyB,SAAgCtD,GAChF,IAAI8B,EAAQD,EAAAA,SAAAA,KAAoB7B,GAEhC,OAAO6B,EAAAA,aAAmBC,EAAO,CAC/BsD,IAAKhQ,KAAK8O,OACVrR,MAAOsO,EAAS,CACdkE,SAAU,cACTvD,EAAMnH,MAAM9H,UAInB0P,EAAepM,UAAUgP,qBAAuB,WAC9C/P,KAAK4N,UAAW,EAChB5N,KAAKyN,kBAAoB,CAACtB,GAC1BnM,KAAK2N,mBAAoB,EAEzB3N,KAAK6P,SAAS7P,KAAK4O,SAAU5O,KAAKyN,oBAWpCN,EAAepM,UAAU8O,SAAW,SAAkBK,EAAQC,GAC5D,GAAKD,EAAO3K,MAAMqF,SAAlB,CAKA,IAAIwF,EAAYpQ,KAAKqQ,MAAMH,EAAQC,GAA+B,GAE9DG,EAA0C,oBAAxBtQ,KAAKuF,MAAM+K,SAA0BtQ,KAAKuF,MAAM+K,SAASF,GAAapQ,KAAKuF,MAAM+K,SAEvGA,EAAmF,YAAnD,qBAAbA,EAA2B,YAAc5E,EAAQ4E,IAA0B7D,EAAAA,aAAmB6D,EAAU,CAAEhQ,IAAK,aAAgBgQ,EAElJ,IAAIC,EAAcH,EAAU7K,MAAMqF,SAC9B4F,EAA0B,GAAGC,OAAOF,EAAaD,GAejDI,EAAuBtE,EAASmE,KAAiBvQ,KAAK+N,aAAa/N,KAAKuF,MAAMqF,UAElF5K,KAAK0O,SAAS,CACZC,KAAM5C,EAAS,GAAIqE,EAAW,CAC5B7K,MAAOwG,EAAS,GAAIqE,EAAU7K,MAAO,CACnCqF,SAAU8F,EAAuBF,EAA0BD,UAcnEpD,EAAepM,UAAUsP,MAAQ,SAAejT,EAAM+S,GACpD,IAAIQ,EAAS5Q,UAAUZ,OAAS,QAAsBmN,IAAjBvM,UAAU,IAAmBA,UAAU,GACxE+M,EAAQ/M,UAAUZ,OAAS,QAAsBmN,IAAjBvM,UAAU,GAAmBA,UAAU,GAAK,EAEhF,IAAK3C,GAAQ4N,EAAgB5N,GAG3B,OAFA4C,KAAK4N,UAAW,EAETxQ,EACF,GAAoB,kBAATA,EAChB,OAAO4C,KAAK4Q,YAAYxT,EAAM+S,EAAiBrD,GAC1C,GAAIP,MAAMC,QAAQpP,GACvB,OAAO4C,KAAK6Q,WAAWzT,EAAM+S,EAAiBrD,GAGhD,IAAIyD,EAAcvQ,KAAKqQ,MAAMjT,EAAKmI,MAAMqF,SAAUuF,GACtC,EAAOrD,EAAQ,GAE3B,OAAOF,EAAkBxP,EAAMmT,EAAaI,EAAQ7D,IAGtDK,EAAepM,UAAU6P,YAAc,SAAqBvE,GAC1D,IAAI8D,EAAkBpQ,UAAUZ,OAAS,QAAsBmN,IAAjBvM,UAAU,GAAmBA,UAAU,GAAK,GACtF+M,EAAQ/M,UAAU,GAEtB,IAAKoQ,EAAgBhR,OACnB,OAAOkN,EAGT,GAAI8D,EAAgBhR,QAAUa,KAAK8Q,OAAOxG,SAAS+B,GAYjD,OARKrM,KAAK2N,kBAKR3N,KAAK4N,UAAW,EAJhB5N,KAAK2N,mBAAoB,EAOpBtB,EAGT,GAAIrM,KAAK8Q,OAAOzG,eAAgB,CAC9B,IAAI0G,EAAa/Q,KAAK6Q,WAAW7Q,KAAK8Q,OAAOzG,eAAegC,GAAS8D,EAAiBrD,GAGtF,OAAOiE,EAAWpE,KAAK,IAGzB,IAAIqE,EAAiBb,EAAgB,GACjCc,EAAsBd,EAAgBe,MAAM,GAE5CC,EAAavT,KAAKwT,KAAK/E,EAAOlN,OAAS,GACvCkS,EAAehF,EAAOiF,UAAU,EAAGH,GAEvC,GAAIH,IAAmB7E,EACrB,OAAOnM,KAAK4Q,YAAYS,EAAcJ,EAAqBnE,GAE7D,IAAIyE,EAAclF,EAAOiF,UAAUH,GAEnC,OAAOE,EAAerR,KAAK4Q,YAAYW,EAAaN,EAAqBnE,IAG3EK,EAAepM,UAAU8P,WAAa,SAAoBW,GACxD,IAAIrB,EAAkBpQ,UAAUZ,OAAS,QAAsBmN,IAAjBvM,UAAU,GAAmBA,UAAU,GAAK,GACtF+M,EAAQ/M,UAAU,GAEtB,IAAKoQ,EAAgBhR,OACnB,OAAOqS,EAGT,GAAqB,IAAjBA,EAAMrS,OACR,MAAO,CAACa,KAAKqQ,MAAMmB,EAAM,GAAIrB,GAA6B,EAAOrD,IAGnE,IAAIkE,EAAiBb,EAAgB,GACjCc,EAAsBd,EAAgBe,MAAM,GAE5CC,EAAavT,KAAKwT,KAAKI,EAAMrS,OAAS,GACtCsS,EAAcD,EAAMN,MAAM,EAAGC,GAEjC,GAAIH,IAAmB7E,EACrB,OAAOnM,KAAK6Q,WAAWY,EAAaR,EAAqBnE,GAE3D,IAAI4E,EAAaF,EAAMN,MAAMC,GAE7B,OAAOM,EAAYhB,OAAOzQ,KAAK6Q,WAAWa,EAAYT,EAAqBnE,KAG7EK,EAAepM,UAAU6O,KAAO,WAC9B,IAAI+B,EAAW3R,KAAKuF,MAAMqM,MAGtBzK,EADwBnH,KAAKvD,GAAGoV,wBACD1K,OAInC,OAAOwK,GAFa/T,KAAKC,MAAMsJ,EAAS5J,WAAWyC,KAAKtC,cAK1DyP,EAAepM,UAAU+Q,OAAS,WAChC,OAAO9R,KAAKgP,MAAML,MAGpBvD,EAAa+B,EAAgB,CAAC,CAC5B7M,IAAK,UACLU,IAAK,WACH,OAAOhB,KAAKmO,iBAAiBnO,KAAKuF,MAAMqF,YAEzC,CACDtK,IAAK,WACLU,IAAK,WACH,OAAOhB,KAAKiO,oBAAoBjO,KAAKuF,MAAMqF,YAE5C,CACDtK,IAAK,SACLU,IAAK,WACH,OAAO+Q,EAAgB/R,KAAKuF,MAAMyM,WAAaD,EAAAA,eAI5C5E,EA3W8B,CA4WrCV,EAAAA,WAAkB3B,EAAOH,KAAOA,EAAMG,EAAOmH,aAAe,CAC5DL,MAAO,EACPtB,SAAU,MACV5S,WAAY,GACZ0Q,WAAY,aACZ4D,SAAU,cACTjH,GAEHoC,EAAe+E,UAuBX","sources":["../node_modules/computed-style/dist/computedStyle.commonjs.js","../node_modules/line-height/lib/line-height.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/react-truncate-markup/es/tokenize-rules.js","../node_modules/react-truncate-markup/es/atom.js","../node_modules/react-truncate-markup/es/index.js"],"sourcesContent":["// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","var TOKENIZE_POLICY = {\n  characters: {\n    tokenizeString: null,\n    isAtomic: function isAtomic(str) {\n      return str.length <= 1;\n    }\n  },\n  words: {\n    tokenizeString: function tokenizeString(str) {\n      return str.match(/(\\s*\\S[\\S\\xA0]*)/g);\n    },\n    isAtomic: function isAtomic(str) {\n      return (/^\\s*[\\S\\xA0]*\\s*$/.test(str)\n      );\n    }\n  }\n};\n\nexport default TOKENIZE_POLICY;","export var Atom = function Atom(props) {\n  return props.children || null;\n};\nAtom.__rtm_atom = true;\n\nexport var isAtomComponent = function isAtomComponent(reactEl) {\n  return !!(reactEl && reactEl.type && reactEl.type.__rtm_atom === true);\n};\n\nexport var ATOM_STRING_ID = '<Atom>';","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport memoizeOne from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport getLineHeight from 'line-height';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport TOKENIZE_POLICY from './tokenize-rules';\nimport { Atom, isAtomComponent, ATOM_STRING_ID } from './atom';\n\nvar SPLIT = {\n  LEFT: true,\n  RIGHT: false\n};\n\nvar toString = function toString(node) {\n  var string = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!node) {\n    return string;\n  } else if (typeof node === 'string') {\n    return string + node;\n  } else if (isAtomComponent(node)) {\n    return string + ATOM_STRING_ID;\n  }\n  var children = Array.isArray(node) ? node : node.props.children || '';\n\n  return string + React.Children.map(children, function (child) {\n    return toString(child);\n  }).join('');\n};\n\nvar cloneWithChildren = function cloneWithChildren(node, children, isRootEl, level) {\n  var getDisplayStyle = function getDisplayStyle() {\n    if (isRootEl) {\n      return {\n        // root element cannot be an inline element because of the line calculation\n        display: (node.props.style || {}).display || 'block'\n      };\n    } else if (level === 2) {\n      return {\n        // level 2 elements (direct children of the root element) need to be inline because of the ellipsis.\n        // if level 2 element was a block element, ellipsis would get rendered on a new line, breaking the max number of lines\n        display: (node.props.style || {}).display || 'inline-block'\n      };\n    } else return {};\n  };\n\n  return _extends({}, node, {\n    props: _extends({}, node.props, {\n      style: _extends({}, node.props.style, getDisplayStyle()),\n      children: children\n    })\n  });\n};\n\nvar validateTree = function validateTree(node) {\n  if (node == null || ['string', 'number'].includes(typeof node === 'undefined' ? 'undefined' : _typeof(node)) || isAtomComponent(node)) {\n    return true;\n  } else if (typeof node.type === 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      console.error('ReactTruncateMarkup tried to render <' + node.type.name + ' />, but truncating React components is not supported, the full content is rendered instead. Only DOM elements are supported. Alternatively, you can take advantage of the <TruncateMarkup.Atom /> component (see more in the docs https://github.com/patrik-piskay/react-truncate-markup/blob/master/README.md#truncatemarkupatom-).');\n      /* eslint-enable */\n    }\n\n    return false;\n  }\n\n  if (node.props && node.props.children) {\n    return React.Children.toArray(node.props.children).reduce(function (isValid, child) {\n      return isValid && validateTree(child);\n    }, true);\n  }\n\n  return true;\n};\n\nvar TruncateMarkup = (_temp = _class = function (_React$Component) {\n  _inherits(TruncateMarkup, _React$Component);\n\n  function TruncateMarkup(props) {\n    _classCallCheck(this, TruncateMarkup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.lineHeight = null;\n    _this.splitDirectionSeq = [];\n    _this.shouldTruncate = true;\n    _this.wasLastCharTested = false;\n    _this.endFound = false;\n    _this.latestThatFits = null;\n    _this.onTruncateCalled = false;\n    _this.toStringMemo = memoizeOne(toString);\n    _this.childrenWithRefMemo = memoizeOne(_this.childrenElementWithRef);\n    _this.validateTreeMemo = memoizeOne(validateTree);\n\n    _this.onTruncate = function (wasTruncated) {\n      if (!_this.onTruncateCalled) {\n        _this.onTruncateCalled = true;\n        _this.props.onTruncate(wasTruncated);\n      }\n    };\n\n    _this.handleResize = function (el, prevResizeObserver) {\n      // clean up previous observer\n      if (prevResizeObserver) {\n        prevResizeObserver.disconnect();\n      }\n\n      // unmounting or just unsetting the element to be replaced with a new one later\n      if (!el) return null;\n\n      /* Wrapper element resize handing */\n      var initialRender = true;\n      var resizeCallback = function resizeCallback() {\n        if (initialRender) {\n          // ResizeObserer cb is called on initial render too so we are skipping here\n          initialRender = false;\n        } else {\n          // wrapper element has been resized, recalculating with the original text\n          _this.shouldTruncate = false;\n          _this.latestThatFits = null;\n\n          _this.setState({\n            text: _this.origText\n          }, function () {\n            _this.shouldTruncate = true;\n            _this.onTruncateCalled = false;\n            _this.truncate();\n          });\n        }\n      };\n\n      var resizeObserver = prevResizeObserver || new ResizeObserver(resizeCallback);\n\n      resizeObserver.observe(el);\n\n      return resizeObserver;\n    };\n\n    _this.setRef = function (el) {\n      var isNewEl = _this.el !== el;\n      _this.el = el;\n\n      // whenever we obtain a new element, attach resize handler\n      if (isNewEl) {\n        _this.resizeObserver = _this.handleResize(el, _this.resizeObserver);\n      }\n    };\n\n    _this.state = {\n      text: _this.childrenWithRefMemo(_this.props.children)\n    };\n    return _this;\n  }\n\n  TruncateMarkup.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isValid) {\n      return;\n    }\n\n    // get the computed line-height of the parent element\n    // it'll be used for determining whether the text fits the container or not\n    this.lineHeight = this.props.lineHeight || getLineHeight(this.el);\n    this.truncate();\n  };\n\n  TruncateMarkup.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    this.shouldTruncate = false;\n    this.latestThatFits = null;\n\n    this.setState({\n      text: this.childrenWithRefMemo(nextProps.children)\n    }, function () {\n      if (!_this2.isValid) {\n        return;\n      }\n\n      _this2.lineHeight = nextProps.lineHeight || getLineHeight(_this2.el);\n      _this2.shouldTruncate = true;\n      _this2.truncate();\n    });\n  };\n\n  TruncateMarkup.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.shouldTruncate === false || this.isValid === false) {\n      return;\n    }\n\n    if (this.endFound) {\n      // we've found the end where we cannot split the text further\n      // that means we've already found the max subtree that fits the container\n      // so we are rendering that\n      if (this.latestThatFits !== null && this.state.text !== this.latestThatFits) {\n        /* eslint-disable react/no-did-update-set-state */\n        this.setState({\n          text: this.latestThatFits\n        });\n\n        return;\n        /* eslint-enable */\n      }\n\n      this.onTruncate( /* wasTruncated */true);\n\n      return;\n    }\n\n    if (this.splitDirectionSeq.length) {\n      if (this.fits()) {\n        this.latestThatFits = this.state.text;\n        // we've found a subtree that fits the container\n        // but we need to check if we didn't cut too much of it off\n        // so we are changing the last splitting decision from splitting and going left\n        // to splitting and going right\n        this.splitDirectionSeq.splice(this.splitDirectionSeq.length - 1, 1, SPLIT.RIGHT, SPLIT.LEFT);\n      } else {\n        this.splitDirectionSeq.push(SPLIT.LEFT);\n      }\n\n      this.tryToFit(this.origText, this.splitDirectionSeq);\n    }\n  };\n\n  TruncateMarkup.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.lineHeight = null;\n    this.latestThatFits = null;\n    this.splitDirectionSeq = [];\n  };\n\n  TruncateMarkup.prototype.truncate = function truncate() {\n    if (this.fits()) {\n      // the whole text fits on the first try, no need to do anything else\n      this.shouldTruncate = false;\n      this.onTruncate( /* wasTruncated */false);\n\n      return;\n    }\n\n    this.truncateOriginalText();\n  };\n\n  TruncateMarkup.prototype.childrenElementWithRef = function childrenElementWithRef(children) {\n    var child = React.Children.only(children);\n\n    return React.cloneElement(child, {\n      ref: this.setRef,\n      style: _extends({\n        wordWrap: 'break-word'\n      }, child.props.style)\n    });\n  };\n\n  TruncateMarkup.prototype.truncateOriginalText = function truncateOriginalText() {\n    this.endFound = false;\n    this.splitDirectionSeq = [SPLIT.LEFT];\n    this.wasLastCharTested = false;\n\n    this.tryToFit(this.origText, this.splitDirectionSeq);\n  };\n\n  /**\n   * Splits rootEl based on instructions and updates React's state with the returned element\n   * After React rerenders the new text, we'll check if the new text fits in componentDidUpdate\n   * @param  {ReactElement} rootEl - the original children element\n   * @param  {Array} splitDirections - list of SPLIT.RIGHT/LEFT instructions\n   */\n\n\n  TruncateMarkup.prototype.tryToFit = function tryToFit(rootEl, splitDirections) {\n    if (!rootEl.props.children) {\n      // no markup in container\n      return;\n    }\n\n    var newRootEl = this.split(rootEl, splitDirections, /* isRootEl */true);\n\n    var ellipsis = typeof this.props.ellipsis === 'function' ? this.props.ellipsis(newRootEl) : this.props.ellipsis;\n\n    ellipsis = (typeof ellipsis === 'undefined' ? 'undefined' : _typeof(ellipsis)) === 'object' ? React.cloneElement(ellipsis, { key: 'ellipsis' }) : ellipsis;\n\n    var newChildren = newRootEl.props.children;\n    var newChildrenWithEllipsis = [].concat(newChildren, ellipsis);\n\n    // edge case tradeoff EC#1 - on initial render it doesn't fit in the requested number of lines (1) so it starts truncating\n    // - because of truncating and the ellipsis position, div#lvl2 will have display set to 'inline-block',\n    //   causing the whole body to fit in 1 line again\n    // - if that happens, ellipsis is not needed anymore as the whole body is rendered\n    // - NOTE this could be fixed by checking for this exact case and handling it separately so it renders <div>foo {ellipsis}</div>\n    //\n    // Example:\n    // <TruncateMarkup lines={1}>\n    //   <div>\n    //     foo\n    //     <div id=\"lvl2\">bar</div>\n    //   </div>\n    // </TruncateMarkup>\n    var shouldRenderEllipsis = toString(newChildren) !== this.toStringMemo(this.props.children);\n\n    this.setState({\n      text: _extends({}, newRootEl, {\n        props: _extends({}, newRootEl.props, {\n          children: shouldRenderEllipsis ? newChildrenWithEllipsis : newChildren\n        })\n      })\n    });\n  };\n\n  /**\n   * Splits JSX node based on its type\n   * @param  {null|string|Array|Object} node - JSX node\n   * @param  {Array} splitDirections - list of SPLIT.RIGHT/LEFT instructions\n   * @return {null|string|Array|Object} - split JSX node\n   */\n\n\n  TruncateMarkup.prototype.split = function split(node, splitDirections) {\n    var isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    if (!node || isAtomComponent(node)) {\n      this.endFound = true;\n\n      return node;\n    } else if (typeof node === 'string') {\n      return this.splitString(node, splitDirections, level);\n    } else if (Array.isArray(node)) {\n      return this.splitArray(node, splitDirections, level);\n    }\n\n    var newChildren = this.split(node.props.children, splitDirections,\n    /* isRoot */false, level + 1);\n\n    return cloneWithChildren(node, newChildren, isRoot, level);\n  };\n\n  TruncateMarkup.prototype.splitString = function splitString(string) {\n    var splitDirections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var level = arguments[2];\n\n    if (!splitDirections.length) {\n      return string;\n    }\n\n    if (splitDirections.length && this.policy.isAtomic(string)) {\n      // allow for an extra render test with the current character included\n      // in most cases this variation was already tested, but some edge cases require this check\n      // NOTE could be removed once EC#1 is taken care of\n      if (!this.wasLastCharTested) {\n        this.wasLastCharTested = true;\n      } else {\n        // we are trying to split further but we have nowhere to go now\n        // that means we've already found the max subtree that fits the container\n        this.endFound = true;\n      }\n\n      return string;\n    }\n\n    if (this.policy.tokenizeString) {\n      var wordsArray = this.splitArray(this.policy.tokenizeString(string), splitDirections, level);\n\n      // in order to preserve the input structure\n      return wordsArray.join('');\n    }\n\n    var splitDirection = splitDirections[0],\n        restSplitDirections = splitDirections.slice(1);\n\n    var pivotIndex = Math.ceil(string.length / 2);\n    var beforeString = string.substring(0, pivotIndex);\n\n    if (splitDirection === SPLIT.LEFT) {\n      return this.splitString(beforeString, restSplitDirections, level);\n    }\n    var afterString = string.substring(pivotIndex);\n\n    return beforeString + this.splitString(afterString, restSplitDirections, level);\n  };\n\n  TruncateMarkup.prototype.splitArray = function splitArray(array) {\n    var splitDirections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var level = arguments[2];\n\n    if (!splitDirections.length) {\n      return array;\n    }\n\n    if (array.length === 1) {\n      return [this.split(array[0], splitDirections, /* isRoot */false, level)];\n    }\n\n    var splitDirection = splitDirections[0],\n        restSplitDirections = splitDirections.slice(1);\n\n    var pivotIndex = Math.ceil(array.length / 2);\n    var beforeArray = array.slice(0, pivotIndex);\n\n    if (splitDirection === SPLIT.LEFT) {\n      return this.splitArray(beforeArray, restSplitDirections, level);\n    }\n    var afterArray = array.slice(pivotIndex);\n\n    return beforeArray.concat(this.splitArray(afterArray, restSplitDirections, level));\n  };\n\n  TruncateMarkup.prototype.fits = function fits() {\n    var maxLines = this.props.lines;\n\n    var _el$getBoundingClient = this.el.getBoundingClientRect(),\n        height = _el$getBoundingClient.height;\n\n    var computedLines = Math.round(height / parseFloat(this.lineHeight));\n\n    return maxLines >= computedLines;\n  };\n\n  TruncateMarkup.prototype.render = function render() {\n    return this.state.text;\n  };\n\n  _createClass(TruncateMarkup, [{\n    key: 'isValid',\n    get: function get() {\n      return this.validateTreeMemo(this.props.children);\n    }\n  }, {\n    key: 'origText',\n    get: function get() {\n      return this.childrenWithRefMemo(this.props.children);\n    }\n  }, {\n    key: 'policy',\n    get: function get() {\n      return TOKENIZE_POLICY[this.props.tokenize] || TOKENIZE_POLICY.characters;\n    }\n  }]);\n\n  return TruncateMarkup;\n}(React.Component), _class.Atom = Atom, _class.defaultProps = {\n  lines: 1,\n  ellipsis: '...',\n  lineHeight: '',\n  onTruncate: function onTruncate() {},\n  tokenize: 'characters'\n}, _temp);\nexport { TruncateMarkup as default };\nTruncateMarkup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.element.isRequired,\n  lines: PropTypes.number,\n  ellipsis: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n  lineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onTruncate: PropTypes.func,\n  // eslint-disable-next-line\n  onAfterTruncate: function onAfterTruncate(props, propName, componentName) {\n    if (props[propName]) {\n      return new Error(componentName + ': Setting `onAfterTruncate` prop is deprecated, use `onTruncate` instead.');\n    }\n  },\n  tokenize: function tokenize(props, propName, componentName) {\n    var tokenizeValue = props[propName];\n\n    if (typeof tokenizeValue !== 'undefined') {\n      if (!TOKENIZE_POLICY[tokenizeValue]) {\n        /* eslint-disable no-console */\n        return new Error(componentName + ': Unknown option for prop \\'tokenize\\': \\'' + tokenizeValue + '\\'. Option \\'characters\\' will be used instead.');\n        /* eslint-enable */\n      }\n    }\n  }\n} : {};"],"names":["module","exports","el","prop","getComputedStyle","window","currentStyle","replace","word","letter","toUpperCase","computedStyle","require","node","lnHeightStr","lnHeight","parseFloat","_lnHeightStyle","style","lineHeight","indexOf","Math","round","nodeName","_node","document","createElement","innerHTML","setAttribute","fontSizeStr","fontSize","padding","border","body","appendChild","offsetHeight","removeChild","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","length","i","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","arguments","this","apply","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","enumerable","configurable","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","_a","call","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","characters","tokenizeString","isAtomic","str","words","match","test","Atom","children","__rtm_atom","_class","_temp","isAtomComponent","reactEl","type","ATOM_STRING_ID","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_typeof","Symbol","iterator","obj","constructor","_extends","assign","source","hasOwnProperty","SPLIT","toString","string","undefined","Array","isArray","React","child","join","cloneWithChildren","isRootEl","level","display","validateTree","includes","isValid","TruncateMarkup","_React$Component","instance","_classCallCheck","ReferenceError","_possibleConstructorReturn","splitDirectionSeq","shouldTruncate","wasLastCharTested","endFound","latestThatFits","onTruncateCalled","toStringMemo","memoizeOne","childrenWithRefMemo","childrenElementWithRef","validateTreeMemo","onTruncate","wasTruncated","handleResize","prevResizeObserver","initialRender","resizeObserver","setState","text","origText","truncate","setRef","isNewEl","state","subClass","superClass","setPrototypeOf","__proto__","_inherits","componentDidMount","getLineHeight","UNSAFE_componentWillReceiveProps","nextProps","_this2","componentDidUpdate","fits","tryToFit","componentWillUnmount","truncateOriginalText","ref","wordWrap","rootEl","splitDirections","newRootEl","split","ellipsis","newChildren","newChildrenWithEllipsis","concat","shouldRenderEllipsis","isRoot","splitString","splitArray","policy","wordsArray","splitDirection","restSplitDirections","slice","pivotIndex","ceil","beforeString","substring","afterString","array","beforeArray","afterArray","maxLines","lines","getBoundingClientRect","render","TOKENIZE_POLICY","tokenize","defaultProps","propTypes"],"sourceRoot":""}