{"version":3,"file":"static/js/624.90f47526.chunk.js","mappings":"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","sources":["components/Profile.js","utils.js"],"sourcesContent":["import { FaRegEdit } from 'react-icons/fa';\nimport { useContext, useState } from 'react';\nimport axios from 'axios';\n\nimport './styles/Profile.css';\nimport { UserContext } from '../contexts/userContext';\nimport { ProjectContext } from '../contexts/projectContext';\nimport { updateProperty, erroneous, uploadImage } from '../utils';\n\nconst Profile = () => {\n    const defaultPassEdit = () => ({\n        state: false,\n        newPassword: '',\n        confirmPassword: ''\n    });\n\n    const { userData, userDispatcher } = useContext(UserContext);\n    const { projectDispatcher } = useContext(ProjectContext);\n\n    const [editOff, setEditOff] = useState(true);\n    const [passEdit, setPassEdit] = useState(defaultPassEdit());\n    const [activeUploadModal, setActiveUploadModal] = useState(false);\n    const [selectedPhoto, setSelectedPhoto] = useState({});\n\n    const toggleEdit = () => setEditOff(prev => !prev);\n    const togglePassEdit = () => setPassEdit(prev => ({\n        ...prev,\n        state: !prev.state\n    }));\n    const handlePassEdit = (e) => {\n        const { name, value } = e.target;\n\n        setPassEdit(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    const handleChange = (e) => {\n        updateProperty(e, userDispatcher);\n    };\n    const submitUpdates = () => {\n        const flag = Object.values(passEdit).every(value => value);\n        const postData = {\n            username: userData.username,\n            email: userData.email\n        };\n\n        if (flag) {\n            if (passEdit.newPassword === passEdit.confirmPassword) {\n                postData.password = passEdit.newPassword;\n            } else {\n                const e = { message: 'Given passwords not equal' };\n                erroneous(e, projectDispatcher);\n                return;\n            }\n        }\n\n        axios.post('/api/users/update-admin', postData, {\n            headers: {\n                \"Content-type\": 'application/json',\n                Authorization: `Bearer ${userData.token}`,\n            }\n        })\n            .then(res => {\n                userDispatcher({\n                    type: 'STORE_USER',\n                    user: res.data\n                });\n            })\n            .catch(err => {\n                erroneous(err, projectDispatcher);\n            });\n        setPassEdit(defaultPassEdit());\n        setTimeout(() => {\n            projectDispatcher({\n                type: 'REMOVE_ERROR'\n            });\n        }, 4000);\n    };\n    const changePhoto = (e) => {\n        const photo = e.target.files[0];\n\n        setSelectedPhoto(photo);\n    };\n    const sendPhoto = (e) => {\n        e.preventDefault();\n\n        uploadImage(selectedPhoto, userDispatcher, projectDispatcher)\n        .then(photo => {\n            console.log(photo);\n            axios.post('/api/users/upload-photo', { photo }, {\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${userData.token}`\n                },\n            }).then(res => {\n                userDispatcher({\n                    type: 'STORE_USER',\n                    user: res.data\n                });\n                setActiveUploadModal(false);\n            }).catch(err => {\n                erroneous(err, projectDispatcher);\n            });\n        }).catch(err => {\n            erroneous(err, projectDispatcher);\n        });\n    };\n\n    return (\n        <section className='profile-section'>\n            {activeUploadModal && <form className='select-photo-card'\n                onSubmit={sendPhoto}\n            >\n                <label htmlFor='select-photo'>\n                    Select a photo:\n                </label>\n                <input\n                    type='file'\n                    accept='image/png, image/jpeg'\n                    onChange={changePhoto}\n                />\n                <button>Upload</button>\n            </form>\n            }\n            <div className='profile-pic'>\n                {userData.photo ?\n                    <img src={userData.photo}\n                        alt={userData.username} /> :\n                    <div className='no-photo'>\n                        {userData.username &&\n                            userData.username[0].toUpperCase()\n                        }\n                    </div>\n                }\n                <FaRegEdit onClick={() => setActiveUploadModal(true)} />\n            </div>\n            <div className='profile-info'>\n                <span className='input-edit'>\n                    {editOff ? 'View' : 'Edit'} Mode <FaRegEdit\n                        onClick={toggleEdit}\n                    />\n                </span>\n                <div>\n                    <label htmlFor='username'>Username</label>\n                    <div className='edit-box'>\n                        <input\n                            type='text'\n                            name='username'\n                            value={userData.username}\n                            onChange={handleChange}\n                            disabled={editOff}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor='email'>Email</label>\n                    <div className='edit-box'>\n                        <input\n                            type='email'\n                            name='email'\n                            value={userData.email}\n                            onChange={handleChange}\n                            disabled={editOff}\n                        />\n                    </div>\n                </div>\n                <hr />\n                <div className='pass-edit'>\n                    {!passEdit.state && <div className='disable-pass-edit'>\n                        <FaRegEdit onClick={togglePassEdit} />\n                    </div>}\n                    <label htmlFor='new-password'>New Password</label>\n                    <input\n                        type='password'\n                        name='newPassword'\n                        placeholder='Enter New Password'\n                        onChange={handlePassEdit}\n                        value={passEdit.newPassword}\n                        id='new-password'\n                    />\n                    <label htmlFor='confirm-password'>Confirm Password</label>\n                    <input\n                        type='password'\n                        name='confirmPassword'\n                        placeholder='Confirm New Password'\n                        onChange={handlePassEdit}\n                        value={passEdit.confirmPassword}\n                        id='confirm-password'\n                    />\n                </div>\n            </div>\n            <button onClick={submitUpdates}>Save Changes</button>\n        </section>\n    );\n};\n\nexport default Profile;","import axios from \"axios\";\n\nexport const updateProperty = (event, dispatch) => {\n    const { name, value } = event.target;\n\n    dispatch({\n        type: 'UPDATE_PROPERTY',\n        key: name,\n        value\n    });\n};\n\nexport const erroneous = (err, errDispatcher) => {\n    let errors = [];\n\n    if (err && err.response) {\n        if (err.response.data && err.response.data instanceof Array) {\n            errors = err.response.data;\n        } else if (err.response.statusText) {\n            errors.push(err.response.statusText);\n        }\n    }\n    if (err.message && errors.length === 0)\n        errors.push(err.message);\n\n    errDispatcher({\n        type: 'SET_ERROR',\n        errors: errors\n    });\n};\n\nexport const uploadImage = async (photo, dispatcher, errDispatcher) => {\n    const UPLOAD_URL = process.env.REACT_APP_UPLOAD_IMAGE_URL;\n    const data = new FormData();\n\n    data.append('file', photo);\n    data.append('upload_preset', 'chiblogger');\n    data.append('cloud_name', 'ovecjoe');\n\n    try {\n        const imageObj = await axios.post(UPLOAD_URL, data);\n        dispatcher({\n            type: 'UPDATE_PHOTO',\n            photoUrl: imageObj.data.url\n        });\n\n        return imageObj.data.url;\n    } catch (error) {\n        erroneous(error, errDispatcher);\n    }\n\n\n};\n\nexport const computeDate = (dateString) => {\n    const dateCreated = new Date(dateString);\n    const presentDate = new Date();\n\n    let result = presentDate.getFullYear() - dateCreated.getFullYear();\n\n    if (!result) {\n        result = presentDate.getMonth() - dateCreated.getMonth();\n        if (!result) {\n            result = presentDate.getDay() - dateCreated.getDay();\n            if (!result) {\n                result = presentDate.getHours() - dateCreated.getHours();\n                if (!result) {\n                    result = presentDate.getMinutes() - dateCreated.getMinutes();\n                    if (!result) {\n                        result = presentDate.getSeconds() - dateCreated.getSeconds();\n                        return `${result} seconds ago`;\n                    }\n                    return `${result} minutes ago`;\n                }\n                return `${result} hours ago`;\n            }\n            return `${result} days ago`;\n        }\n        return `${result} months ago`;\n    }\n    return `${result} years ago`;\n};"],"names":["useContext","UserContext","userData","userDispatcher","projectDispatcher","ProjectContext","useState","editOff","setEditOff","state","newPassword","confirmPassword","passEdit","setPassEdit","activeUploadModal","setActiveUploadModal","selectedPhoto","setSelectedPhoto","handlePassEdit","e","target","name","value","prev","handleChange","updateProperty","className","onSubmit","preventDefault","uploadImage","then","photo","console","log","axios","headers","Authorization","token","res","type","user","data","catch","err","erroneous","htmlFor","accept","onChange","files","src","alt","username","toUpperCase","onClick","disabled","email","placeholder","id","flag","Object","values","every","postData","message","password","setTimeout","event","dispatch","key","errDispatcher","errors","response","Array","statusText","push","length","dispatcher","process","FormData","append","imageObj","photoUrl","url","computeDate","dateString","dateCreated","Date","presentDate","result","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds"],"sourceRoot":""}